'use strict';

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var prefetch = function () {
  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee2(path) {
    var routes, currentRoute, initialProps, _ref3, data;

    return _regenerator2.default.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            path = cleanPath(path);

            if (path) {
              _context2.next = 3;
              break;
            }

            return _context2.abrupt('return');

          case 3:
            if (!propsCache[path]) {
              _context2.next = 5;
              break;
            }

            return _context2.abrupt('return', propsCache[path]);

          case 5:
            if (!failed[path]) {
              _context2.next = 7;
              break;
            }

            return _context2.abrupt('return');

          case 7:
            if (!(process.env.NODE_ENV === 'development')) {
              _context2.next = 31;
              break;
            }

            _context2.next = 10;
            return routesPromise;

          case 10:
            routes = _context2.sent;
            currentRoute = routes.find(function (d) {
              return d.path === path;
            });

            // Warn for missing routes

            if (currentRoute) {
              _context2.next = 15;
              break;
            }

            console.warn('No route defined for:', path);
            return _context2.abrupt('return');

          case 15:
            if (!currentRoute.getProps) {
              _context2.next = 30;
              break;
            }

            _context2.prev = 16;

            if (!inflight[path]) {
              inflight[path] = currentRoute.getProps({ route: currentRoute, dev: true });
            }
            _context2.next = 20;
            return inflight[path];

          case 20:
            initialProps = _context2.sent;


            // Place it in the cache
            propsCache[path] = {
              initialProps: initialProps
            };
            _context2.next = 28;
            break;

          case 24:
            _context2.prev = 24;
            _context2.t0 = _context2['catch'](16);

            console.warn('There was an error during getProps() for route:', path);
            console.error(_context2.t0);

          case 28:
            delete inflight[path];
            return _context2.abrupt('return', propsCache[path]);

          case 30:
            return _context2.abrupt('return');

          case 31:
            if (!(window.__routeData && window.__routeData.path === path)) {
              _context2.next = 34;
              break;
            }

            propsCache[path] = window.__routeData;
            return _context2.abrupt('return', propsCache[path]);

          case 34:
            _context2.prev = 34;

            // Reuse request for duplicate inflight requests
            inflight[path] = inflight[path] || _axios2.default.get((0, _shared.pathJoin)(path, 'routeData.json'));
            _context2.next = 38;
            return inflight[path];

          case 38:
            _ref3 = _context2.sent;
            data = _ref3.data;


            // Place it in the cache
            propsCache[path] = data;
            _context2.next = 48;
            break;

          case 43:
            _context2.prev = 43;
            _context2.t1 = _context2['catch'](34);

            // Mark the request as failed
            failed[path] = true;
            console.warn('There was an error during getProps() for route:', path);
            console.error(_context2.t1);

          case 48:
            delete inflight[path];
            return _context2.abrupt('return', propsCache[path]);

          case 50:
          case 'end':
            return _context2.stop();
        }
      }
    }, _callee2, this, [[16, 24], [34, 43]]);
  }));

  return function prefetch(_x) {
    return _ref2.apply(this, arguments);
  };
}();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _axios = require('axios');

var _axios2 = _interopRequireDefault(_axios);

var _createBrowserHistory = require('history/createBrowserHistory');

var _createBrowserHistory2 = _interopRequireDefault(_createBrowserHistory);

var _reactHelmet = require('react-helmet');

var _reactRouterDom = require('react-router-dom');

var ReactRouter = _interopRequireWildcard(_reactRouterDom);

var _shared = require('./shared');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }
//


var propsCache = {};
var inflight = {};
var failed = {};

var routesPromise = void 0;
var InitialLoading = void 0;

if (process.env.NODE_ENV === 'development') {
  routesPromise = _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
    var userConfig;
    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            userConfig = require('__static-config').default;
            _context.t0 = _shared.normalizeRoutes;
            _context.next = 4;
            return userConfig.getRoutes({ dev: true });

          case 4:
            _context.t1 = _context.sent;
            return _context.abrupt('return', (0, _context.t0)(_context.t1));

          case 6:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, undefined);
  }))();
  InitialLoading = function InitialLoading() {
    return _react2.default.createElement(
      'div',
      {
        style: {
          display: 'block',
          width: '100%',
          textAlign: 'center',
          padding: '10px'
        }
      },
      _react2.default.createElement(
        'style',
        null,
        '\n        @keyframes react-static-loader {\n          0% {\n            transform: rotate(0deg)\n          }\n          100% {\n            transform: rotate(360deg)\n          }\n        }\n      '
      ),
      _react2.default.createElement(
        'svg',
        {
          style: {
            width: '50px',
            height: '50px'
          }
        },
        _react2.default.createElement('circle', {
          style: {
            transformOrigin: '50% 50% 0px',
            animation: 'react-static-loader 1s infinite',
            r: 20,
            stroke: 'rgba(0,0,0,0.4)',
            strokeWidth: 4,
            cx: 25,
            cy: 25,
            strokeDasharray: 10.4,
            strokeLinecap: 'round',
            fill: 'transparent'
          }
        })
      )
    );
  };
}

function cleanPath(path) {
  // Resolve the local path
  if (!path) {
    return;
  }
  // Only allow origin or absolute links
  var hasOrigin = path.startsWith(window.location.origin);
  var isAbsolute = path.startsWith('/');
  if (!hasOrigin && !isAbsolute) {
    return;
  }
  var end = path.indexOf('#');
  end = end === -1 ? undefined : end;
  return (0, _shared.pathJoin)(path.substring(hasOrigin ? window.location.origin.length : 0, end));
}

function isPrefetched(path) {
  path = cleanPath(path);
  if (!path) {
    return;
  }

  if (propsCache[path]) {
    return propsCache[path];
  }
}

function getRouteProps(Comp) {
  var _class, _temp;

  return _temp = _class = function (_Component) {
    _inherits(AsyncPropsComponent, _Component);

    function AsyncPropsComponent() {
      _classCallCheck(this, AsyncPropsComponent);

      return _possibleConstructorReturn(this, (AsyncPropsComponent.__proto__ || Object.getPrototypeOf(AsyncPropsComponent)).apply(this, arguments));
    }

    _createClass(AsyncPropsComponent, [{
      key: 'componentWillMount',
      value: function () {
        var _ref4 = _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee3() {
          var pathname, path;
          return _regenerator2.default.wrap(function _callee3$(_context3) {
            while (1) {
              switch (_context3.prev = _context3.next) {
                case 0:
                  if (!(process.env.NODE_ENV === 'development')) {
                    _context3.next = 6;
                    break;
                  }

                  pathname = this.context.router.route.location.pathname;
                  path = (0, _shared.pathJoin)(pathname);
                  _context3.next = 5;
                  return prefetch(path);

                case 5:
                  this.setState({});

                case 6:
                case 'end':
                  return _context3.stop();
              }
            }
          }, _callee3, this);
        }));

        function componentWillMount() {
          return _ref4.apply(this, arguments);
        }

        return componentWillMount;
      }()
    }, {
      key: 'render',
      value: function render() {
        var pathname = this.context.router.route.location.pathname;

        var path = (0, _shared.pathJoin)(pathname);

        var embeddedProps = void 0;
        if (typeof window !== 'undefined') {
          if (window.__routeData && window.__routeData.path === path) {
            embeddedProps = window.__routeData.initialProps;
          }
        }

        var initialProps = embeddedProps || (propsCache[path] ? propsCache[path].initialProps : this.context.initialProps);

        if (!initialProps) {
          if (process.env.NODE_ENV === 'development') {
            return _react2.default.createElement(InitialLoading, null);
          }
          return null;
        }
        return _react2.default.createElement(Comp, _extends({}, this.props, initialProps));
      }
    }]);

    return AsyncPropsComponent;
  }(_react.Component), _class.contextTypes = {
    initialProps: _propTypes2.default.object,
    router: _propTypes2.default.object
  }, _temp;
}

var Prefetch = function (_Component2) {
  _inherits(Prefetch, _Component2);

  function Prefetch() {
    _classCallCheck(this, Prefetch);

    return _possibleConstructorReturn(this, (Prefetch.__proto__ || Object.getPrototypeOf(Prefetch)).apply(this, arguments));
  }

  _createClass(Prefetch, [{
    key: 'componentDidMount',
    value: function () {
      var _ref5 = _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee4() {
        var _props, path, onLoad, data;

        return _regenerator2.default.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _props = this.props, path = _props.path, onLoad = _props.onLoad;
                _context4.next = 3;
                return prefetch(path);

              case 3:
                data = _context4.sent;

                onLoad(data, path);

              case 5:
              case 'end':
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function componentDidMount() {
        return _ref5.apply(this, arguments);
      }

      return componentDidMount;
    }()
  }, {
    key: 'render',
    value: function render() {
      return this.props.children;
    }
  }]);

  return Prefetch;
}(_react.Component);

Prefetch.defaultProps = {
  children: null,
  path: null,
  onLoad: function onLoad() {}
};


var loading = false;
var subscribers = [];
var setLoading = function setLoading(d) {
  loading = d;
  subscribers.forEach(function (s) {
    return s();
  });
};

var Router = function (_Component3) {
  _inherits(Router, _Component3);

  function Router() {
    _classCallCheck(this, Router);

    return _possibleConstructorReturn(this, (Router.__proto__ || Object.getPrototypeOf(Router)).apply(this, arguments));
  }

  _createClass(Router, [{
    key: 'render',
    value: function render() {
      var _this4 = this;

      var _props2 = this.props,
          history = _props2.history,
          rest = _objectWithoutProperties(_props2, ['history']);

      var URL = this.context.URL;

      var context = URL ? {} : undefined;

      var ResolvedRouter = void 0;
      var resolvedHistory = void 0;

      // If statically rendering, use the static router
      if (URL) {
        ResolvedRouter = require('react-router').StaticRouter;
        resolvedHistory = undefined;
      } else {
        ResolvedRouter = ReactRouter.Router;
        resolvedHistory = history || (0, _createBrowserHistory2.default)();['push', 'replace'].forEach(function (method) {
          var originalMethod = resolvedHistory[method];
          resolvedHistory[method] = function () {
            var _ref6 = _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee5() {
              for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
              }

              var path;
              return _regenerator2.default.wrap(function _callee5$(_context5) {
                while (1) {
                  switch (_context5.prev = _context5.next) {
                    case 0:
                      path = typeof args[0] === 'string' ? args[0] : args[0].pathname + args[0].search;

                      if (isPrefetched(path)) {
                        _context5.next = 13;
                        break;
                      }

                      _context5.prev = 2;

                      setLoading(true);
                      _context5.next = 6;
                      return prefetch(path);

                    case 6:
                      _context5.next = 12;
                      break;

                    case 8:
                      _context5.prev = 8;
                      _context5.t0 = _context5['catch'](2);

                      console.error(_context5.t0);
                      console.warn('Uh oh! We should probably display a soft 404 here');

                    case 12:
                      setLoading(false);

                    case 13:
                      originalMethod.apply(resolvedHistory, args);

                    case 14:
                    case 'end':
                      return _context5.stop();
                  }
                }
              }, _callee5, _this4, [[2, 8]]);
            }));

            return function () {
              return _ref6.apply(this, arguments);
            };
          }();
        });
      }

      return _react2.default.createElement(ResolvedRouter, _extends({ history: resolvedHistory, location: URL, context: context }, rest));
    }
  }]);

  return Router;
}(_react.Component);

Router.subscribe = function (cb) {
  var ccb = function ccb() {
    return cb(loading);
  };
  subscribers.push(ccb);
  return function () {
    subscribers = subscribers.filter(function (d) {
      return d !== ccb;
    });
  };
};

Router.contextTypes = {
  URL: _propTypes2.default.string
};


module.exports = _extends({}, ReactRouter, {
  BrowserRouter: undefined,
  HashRouter: undefined,
  MemoryRouter: undefined,
  StaticRouter: undefined,
  Router: Router,
  getRouteProps: getRouteProps,
  Prefetch: Prefetch,
  prefetch: prefetch,
  Head: _reactHelmet.Helmet
});
;

var _temp2 = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(propsCache, 'propsCache', 'src/index.js');

  __REACT_HOT_LOADER__.register(inflight, 'inflight', 'src/index.js');

  __REACT_HOT_LOADER__.register(failed, 'failed', 'src/index.js');

  __REACT_HOT_LOADER__.register(routesPromise, 'routesPromise', 'src/index.js');

  __REACT_HOT_LOADER__.register(InitialLoading, 'InitialLoading', 'src/index.js');

  __REACT_HOT_LOADER__.register(cleanPath, 'cleanPath', 'src/index.js');

  __REACT_HOT_LOADER__.register(isPrefetched, 'isPrefetched', 'src/index.js');

  __REACT_HOT_LOADER__.register(prefetch, 'prefetch', 'src/index.js');

  __REACT_HOT_LOADER__.register(getRouteProps, 'getRouteProps', 'src/index.js');

  __REACT_HOT_LOADER__.register(Prefetch, 'Prefetch', 'src/index.js');

  __REACT_HOT_LOADER__.register(loading, 'loading', 'src/index.js');

  __REACT_HOT_LOADER__.register(subscribers, 'subscribers', 'src/index.js');

  __REACT_HOT_LOADER__.register(setLoading, 'setLoading', 'src/index.js');

  __REACT_HOT_LOADER__.register(Router, 'Router', 'src/index.js');
}();

;