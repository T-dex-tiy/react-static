'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _webpack = require('webpack');

var _webpack2 = _interopRequireDefault(_webpack);

var _webpackDevServer = require('webpack-dev-server');

var _webpackDevServer2 = _interopRequireDefault(_webpackDevServer);

var _formatWebpackMessages = require('react-dev-utils/formatWebpackMessages');

var _formatWebpackMessages2 = _interopRequireDefault(_formatWebpackMessages);

var _chalk = require('chalk');

var _chalk2 = _interopRequireDefault(_chalk);

var _fsExtra = require('fs-extra');

var _fsExtra2 = _interopRequireDefault(_fsExtra);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _server = require('react-dom/server');

var _webpackConfigurator = require('webpack-configurator');

var _webpackConfigurator2 = _interopRequireDefault(_webpackConfigurator);

var _DefaultHtml = require('../DefaultHtml');

var _DefaultHtml2 = _interopRequireDefault(_DefaultHtml);

var _webpackConfig = require('../webpack.config.dev');

var _webpackConfig2 = _interopRequireDefault(_webpackConfig);

var _copyPublicFolder = require('../copyPublicFolder');

var _copyPublicFolder2 = _interopRequireDefault(_copyPublicFolder);

var _static = require('../static');

var _paths = require('../paths');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }
//


var port = process.env.PORT || '3000';

var first = true;
var compiler = void 0;

function buildCompiler() {
  var config = (0, _static.getConfig)();
  var webpackConfig = new _webpackConfigurator2.default();

  webpackConfig.merge(_webpackConfig2.default);
  if (config.webpack) {
    config.webpack(webpackConfig, { dev: true });
  }
  var finalWebpackConfig = webpackConfig.resolve();

  compiler = (0, _webpack2.default)(finalWebpackConfig);

  compiler.plugin('invalid', function () {
    console.log('=> Rebuilding...');
    console.time(_chalk2.default.green('=> [\u2713] Build Complete'));
  });

  compiler.plugin('done', function (stats) {
    var messages = (0, _formatWebpackMessages2.default)(stats.toJson({}, true));
    var isSuccessful = !messages.errors.length && !messages.warnings.length;

    if (isSuccessful) {
      console.timeEnd(_chalk2.default.green('=> [\u2713] Build Complete'));
    }

    if (first) {
      first = false;
      console.log(_chalk2.default.green('=> [\u2713] App serving at'), 'http://localhost:' + port);
    }

    if (messages.errors.length) {
      console.log(_chalk2.default.red('Failed to rebuild.'));
      messages.errors.forEach(function (message) {
        console.log(message);
        console.log();
      });
      return;
    }

    if (messages.warnings.length) {
      console.log(_chalk2.default.yellow('Built complete with warnings.'));
      console.log();
      messages.warnings.forEach(function (message) {
        console.log(message);
        console.log();
      });
    }
  });
}

function startDevServer() {
  var devServer = new _webpackDevServer2.default(compiler, {
    port: port,
    hot: true,
    disableHostCheck: true,
    contentBase: _paths.DIST,
    publicPath: '/',
    historyApiFallback: true,
    compress: true,
    quiet: true,
    watchOptions: {
      ignored: /node_modules/
    }
  });

  devServer.listen(port, function (err) {
    if (err) {
      return console.log(err);
    }
  });
}

var _default = function () {
  var _ref = _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
    var config, HtmlTemplate, Html, Head, Body, html;
    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            config = (0, _static.getConfig)();
            _context.next = 3;
            return _fsExtra2.default.remove(_paths.DIST);

          case 3:
            HtmlTemplate = config.Html || _DefaultHtml2.default;

            Html = function Html(_ref2) {
              var children = _ref2.children,
                  rest = _objectWithoutProperties(_ref2, ['children']);

              return _react2.default.createElement(
                'html',
                _extends({ lang: 'en' }, rest),
                children
              );
            };

            Head = function Head(_ref3) {
              var children = _ref3.children,
                  rest = _objectWithoutProperties(_ref3, ['children']);

              return _react2.default.createElement(
                'head',
                rest,
                children
              );
            };

            Body = function Body(_ref4) {
              var children = _ref4.children,
                  rest = _objectWithoutProperties(_ref4, ['children']);

              return _react2.default.createElement(
                'body',
                rest,
                children,
                _react2.default.createElement('script', { async: true, src: '/app.js' })
              );
            };

            html = (0, _server.renderToStaticMarkup)(_react2.default.createElement(
              HtmlTemplate,
              { staticMeta: {}, Html: Html, Head: Head, Body: Body },
              _react2.default.createElement('div', { id: 'root' })
            ));
            _context.next = 10;
            return _fsExtra2.default.outputFile(_path2.default.join(_paths.DIST, 'index.html'), html);

          case 10:

            console.log('=> Copying public directory...');
            console.time(_chalk2.default.green('=> [\u2713] Public directory copied'));
            (0, _copyPublicFolder2.default)(_paths.DIST);
            console.timeEnd(_chalk2.default.green('=> [\u2713] Public directory copied'));

            console.log('=> Building...');
            console.time(_chalk2.default.green('=> [\u2713] Build Complete'));
            buildCompiler();
            startDevServer();

          case 18:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, undefined);
  }));

  return function _default() {
    return _ref.apply(this, arguments);
  };
}();

exports.default = _default;
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(port, 'port', 'src/commands/start.js');

  __REACT_HOT_LOADER__.register(first, 'first', 'src/commands/start.js');

  __REACT_HOT_LOADER__.register(compiler, 'compiler', 'src/commands/start.js');

  __REACT_HOT_LOADER__.register(buildCompiler, 'buildCompiler', 'src/commands/start.js');

  __REACT_HOT_LOADER__.register(startDevServer, 'startDevServer', 'src/commands/start.js');

  __REACT_HOT_LOADER__.register(_default, 'default', 'src/commands/start.js');
}();

;